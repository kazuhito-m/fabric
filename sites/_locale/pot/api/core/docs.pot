# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-31 10:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/api/core/docs.rst:3
# d82e10f0d1834974b5951bcb20180e5f
msgid "Documentation helpers"
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:1
# 6fbb266955aa420691bd43e97d001600
msgid "Replace task objects on ``module`` with their wrapped functions instead."
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:3
# f79e4791185f447097bca3441fe22c00
msgid "Specifically, look for instances of `~fabric.tasks.WrappedCallableTask` and replace them with their ``.wrapped`` attribute (the original decorated function.)"
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:7
# 82860f150bb347e39a11c60477bdade0
msgid "This is intended for use with the Sphinx autodoc tool, to be run near the bottom of a project's ``conf.py``. It ensures that the autodoc extension will have full access to the \"real\" function, in terms of function signature and so forth. Without use of ``unwrap_tasks``, autodoc is unable to access the function signature (though it is able to see e.g. ``__doc__``.)"
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:14
# 5fdb0cd5545047f3a4502b14c450d4d1
msgid "For example, at the bottom of your ``conf.py``::"
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:20
# a5b7bcf18ac34ad3b8689631d64967a9
msgid "You can go above and beyond, and explicitly **hide** all non-task functions, by saying ``hide_nontasks=True``. This renames all objects failing the \"is it a task?\" check so they appear to be private, which will then cause autodoc to skip over them."
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:25
# 388d9ef564394de7982e89646f55a247
msgid "``hide_nontasks`` is thus useful when you have a fabfile mixing in subroutines with real tasks and want to document *just* the real tasks."
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:28
# df335bf8dbc3442699ee42d2e799b95a
msgid "If you run this within an actual Fabric-code-using session (instead of within a Sphinx ``conf.py``), please seek immediate medical attention."
msgstr ""

#: ../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/docs.py:docstring of fabric.docs.unwrap_tasks:33
# 6dfbd08a42134212b197efa629b5045d
msgid "`~fabric.tasks.WrappedCallableTask`, `~fabric.decorators.task`"
msgstr ""

