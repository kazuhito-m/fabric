# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-31 10:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/usage/output_controls.rst:3
# 726a84e82e1a4aa38a4edfde655c7dec
msgid "Managing output"
msgstr ""

#: ../../docs/usage/output_controls.rst:5
# 0f3073546f174f1bbb9878ffc83f55c8
msgid "The ``fab`` tool is very verbose by default and prints out almost everything it can, including the remote end's stderr and stdout streams, the command strings being executed, and so forth. While this is necessary in many cases in order to know just what's going on, any nontrivial Fabric task will quickly become difficult to follow as it runs."
msgstr ""

#: ../../docs/usage/output_controls.rst:13
# 3a00300cc1d04da1ab6396a33683f495
msgid "Output levels"
msgstr ""

#: ../../docs/usage/output_controls.rst:15
# a22d720a6b7841cc8d1ddc4ecce1e642
msgid "To aid in organizing task output, Fabric output is grouped into a number of non-overlapping levels or groups, each of which may be turned on or off independently. This provides flexible control over what is displayed to the user."
msgstr ""

#: ../../docs/usage/output_controls.rst:22
# 3382dab8e1b844a093452f8726696d9a
msgid "All levels, save for ``debug``, are on by default."
msgstr ""

#: ../../docs/usage/output_controls.rst:25
# 69f4860db13045e2b265c13999ea3d8e
msgid "Standard output levels"
msgstr ""

#: ../../docs/usage/output_controls.rst:27
# 784f883a117d4a44aa86e6dbce114619
msgid "The standard, atomic output levels/groups are as follows:"
msgstr ""

#: ../../docs/usage/output_controls.rst:29
# 9db53181576d40268fde35e9fd8ca09f
msgid "**status**: Status messages, i.e. noting when Fabric is done running, if the user used a keyboard interrupt, or when servers are disconnected from. These messages are almost always relevant and rarely verbose."
msgstr ""

#: ../../docs/usage/output_controls.rst:33
# fd94a85732ba4e0ab0956a1caffb8765
msgid "**aborts**: Abort messages. Like status messages, these should really only be turned off when using Fabric as a library, and possibly not even then. Note that even if this output group is turned off, aborts will still occur -- there just won't be any output about why Fabric aborted!"
msgstr ""

#: ../../docs/usage/output_controls.rst:38
# 6cf992b70e6545ae9d0ef8e6c985f155
msgid "**warnings**: Warning messages. These are often turned off when one expects a given operation to fail, such as when using ``grep`` to test existence of text in a file. If paired with setting ``env.warn_only`` to True, this can result in fully silent warnings when remote programs fail. As with ``aborts``, this setting does not control actual warning behavior, only whether warning messages are printed or hidden."
msgstr ""

#: ../../docs/usage/output_controls.rst:45
# 984b4357d61b4018860caeb329e80518
msgid "**running**: Printouts of commands being executed or files transferred, e.g. ``[myserver] run: ls /var/www``. Also controls printing of tasks being run, e.g. ``[myserver] Executing task 'foo'``."
msgstr ""

#: ../../docs/usage/output_controls.rst:49
# fb3ade2daddf4ce48f97a335160fdd1a
msgid "**stdout**: Local, or remote, stdout, i.e. non-error output from commands."
msgstr ""

#: ../../docs/usage/output_controls.rst:51
# 89191da302ad499ea58994829e745cbc
msgid "**stderr**: Local, or remote, stderr, i.e. error-related output from commands."
msgstr ""

#: ../../docs/usage/output_controls.rst:53
# 98a7f811dee0427cabc343d7a1800470
msgid "**user**: User-generated output, i.e. local output printed by fabfile code via use of the `~fabric.utils.fastprint` or `~fabric.utils.puts` functions."
msgstr ""

#: ../../docs/usage/output_controls.rst:56
# a1895d2987514ce888238d2190d9f524
msgid "Added \"Executing task\" lines to the ``running`` output level."
msgstr ""

#: ../../docs/usage/output_controls.rst:59
# 68966e377a784a3da9cd18086ed07da6
msgid "Added the ``user`` output level."
msgstr ""

#: ../../docs/usage/output_controls.rst:63
# 0d4693f364d548999798c7ebde00079e
msgid "Debug output"
msgstr ""

#: ../../docs/usage/output_controls.rst:65
# c91551f590b7441aab42c847afca7791
msgid "There is a final atomic output level, ``debug``, which behaves slightly differently from the rest:"
msgstr ""

#: ../../docs/usage/output_controls.rst:68
# eceac65b0266413a9c9208d221edf725
msgid "**debug**: Turn on debugging (which is off by default.) Currently, this is largely used to view the \"full\" commands being run; take for example this `~fabric.operations.run` call::"
msgstr ""

#: ../../docs/usage/output_controls.rst:74
# 11ddd7432d7f4369a6ffc59c7a634eb7
msgid "Normally, the ``running`` line will show exactly what is passed into `~fabric.operations.run`, like so::"
msgstr ""

#: ../../docs/usage/output_controls.rst:79
# 8ce5c2138d5047edb74ab80d0978e1f1
msgid "With ``debug`` on, and assuming you've left :ref:`shell` set to ``True``, you will see the literal, full string as passed to the remote server::"
msgstr ""

#: ../../docs/usage/output_controls.rst:84
# 9bde72d37f994d36938286801122eea2
msgid "Enabling ``debug`` output will also display full Python tracebacks during aborts."
msgstr ""

#: ../../docs/usage/output_controls.rst:89
# f27ae6a7667542d5af5951ee6e3f046f
msgid "Where modifying other pieces of output (such as in the above example where it modifies the 'running' line to show the shell and any escape characters), this setting takes precedence over the others; so if ``running`` is False but ``debug`` is True, you will still be shown the 'running' line in its debugging form."
msgstr ""

#: ../../docs/usage/output_controls.rst:95
# 623af96a12a14858bd6be284cbb895a2
msgid "Debug output now includes full Python tracebacks during aborts."
msgstr ""

#: ../../docs/usage/output_controls.rst:101
# 3115e058307148adada8d2fff9ad94d5
msgid "Output level aliases"
msgstr ""

#: ../../docs/usage/output_controls.rst:103
# f9276d8eb35d46b59b724333d7aa0040
msgid "In addition to the atomic/standalone levels above, Fabric also provides a couple of convenience aliases which map to multiple other levels. These may be referenced anywhere the other levels are referenced, and will effectively toggle all of the levels they are mapped to."
msgstr ""

#: ../../docs/usage/output_controls.rst:108
# afb57cbec0954f40928c902bd6a266e0
msgid "**output**: Maps to both ``stdout`` and ``stderr``. Useful for when you only care to see the 'running' lines and your own print statements (and warnings)."
msgstr ""

#: ../../docs/usage/output_controls.rst:111
# d07e02d60dd241c9a2aebe70facc437a
msgid "**everything**: Includes ``warnings``, ``running``, ``user`` and ``output`` (see above.) Thus, when turning off ``everything``, you will only see a bare minimum of output (just ``status`` and ``debug`` if it's on), along with your own print statements."
msgstr ""

#: ../../docs/usage/output_controls.rst:116
# 8cc78f2021b74d9ebaf05ba14c8bd0ed
msgid "**commands**: Includes ``stdout`` and ``running``. Good for hiding non-erroring commands entirely, while still displaying any stderr output."
msgstr ""

#: ../../docs/usage/output_controls.rst:119
# e41d247b7e844e358503a4555bba4251
msgid "Added the ``commands`` output alias."
msgstr ""

#: ../../docs/usage/output_controls.rst:124
# 46e9f217941c4a368f757465a9ab74ae
msgid "Hiding and/or showing output levels"
msgstr ""

#: ../../docs/usage/output_controls.rst:126
# fd36b9d7b6e44bbea52759b78cd0c49f
msgid "You may toggle any of Fabric's output levels in a number of ways; for examples, please see the API docs linked in each bullet point:"
msgstr ""

#: ../../docs/usage/output_controls.rst:129
# 8b66e05577764a6f9228fa5e2f3695c0
msgid "**Direct modification of fabric.state.output**: `fabric.state.output` is a dictionary subclass (similar to :doc:`env <env>`) whose keys are the output level names, and whose values are either True (show that particular type of output) or False (hide it.)"
msgstr ""

#: ../../docs/usage/output_controls.rst:134
# 46b368237336433986463a51a8dc6a02
msgid "`fabric.state.output` is the lowest-level implementation of output levels and is what Fabric's internals reference when deciding whether or not to print their output."
msgstr ""

#: ../../docs/usage/output_controls.rst:138
# 1ca04497127045c6ac288a306d858638
msgid "**Context managers**: `~fabric.context_managers.hide` and `~fabric.context_managers.show` are twin context managers that take one or more output level names as strings, and either hide or show them within the wrapped block. As with Fabric's other context managers, the prior values are restored when the block exits."
msgstr ""

#: ../../docs/usage/output_controls.rst:146
# 472b02e066484ef38e35c571f6e8421e
msgid "`~fabric.context_managers.settings`, which can nest calls to `~fabric.context_managers.hide` and/or `~fabric.context_managers.show` inside itself."
msgstr ""

#: ../../docs/usage/output_controls.rst:150
# 8df7778481af4f82975ff68c8674c2d6
msgid "**Command-line arguments**: You may use the :option:`--hide` and/or :option:`--show` arguments to :doc:`fab`, which behave exactly like the context managers of the same names (but are, naturally, globally applied) and take comma-separated strings as input."
msgstr ""

