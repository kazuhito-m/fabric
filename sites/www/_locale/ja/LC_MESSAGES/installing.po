# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Fabric\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-31 11:07+0900\n"
"PO-Revision-Date: 2014-12-31 11:30+0900\n"
"Last-Translator: JOTAKI, Taisuke <tekapo@gmail.com>\n"
"Language-Team: Fabric ja <tekapo@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"X-Generator: Poedit 1.7.1\n"

# 53b39261491d43308dce4456f53e1d5b
#: ../../installing.rst:3
msgid "Installing"
msgstr "インストール"

# 5127a86b24934e67878ca4ce3df689c6
#: ../../installing.rst:5
msgid "Fabric is best installed via `pip <http://pip-installer.org>`_ (highly recommended) or `easy_install <http://wiki.python.org/moin/CheeseShopTutorial>`_ (older, but still works fine), e.g.::"
msgstr "Fabricのインストールの一番いい方法は `pip <http://pip.openplans.org>`_ (お勧めです)もしくは `easy_install <http://wiki.python.org/moin/CheeseShopTutorial>`_ (古いですが動作します)です。例えば::"

# e6b3f27cf7534336a4d25bce33402583
#: ../../installing.rst:12
msgid "You may also opt to use your operating system's package manager; the package is typically called ``fabric`` or ``python-fabric``. E.g.::"
msgstr "また、お使いのオペレーティングシステムのパッケージマネージャーを利用してもいいでしょう。パッケージ名はたいてい ``fabric`` もしくは ``python-fabric`` です。例えば::"

# 9fee4d9397ee4a01a9a5f005b0fc3c4d
#: ../../installing.rst:17
msgid "Advanced users wanting to install a development version may use ``pip`` to grab the latest master branch (as well as the dev version of the Paramiko dependency)::"
msgstr "開発版のインストールを望む上級ユーザーは ``pip`` を使って最新のマスターブランチを取得できます。(依存のためParamikoの開発版も必要です)::"

# 060fadd5867d439d96608dfd6900558e
#: ../../installing.rst:24
msgid "Or, to install an editable version for debugging/hacking, execute ``pip install -e .`` (or ``python setup.py develop``) inside a :ref:`downloaded <downloads>` or :ref:`cloned <source-code-checkouts>` copy of the source code."
msgstr "もしくは、デバッグやハッキングのために編集可能なバージョンをインストールしたい場合は、 :ref:`downloaded <downloads>` もしくは :ref:`cloned <source-code-checkouts>` したソースコード内で ``pip install -e .`` (もしくは ``python setup.py install``) を実行してください。"

# 4f7fb620a5584cbfb4e81b2d1919ce76
#: ../../installing.rst:30
msgid "Any development installs of Fabric (whether via ``==dev`` or ``install -e``) require the development version of Paramiko to be installed beforehand, or Fabric's installation may fail."
msgstr "Fabricのどの開発版(``==dev`` もしくは ``install -e`` のどちらでも)でもParamikoの開発版の事前のインストールが必要です。さもないとFabricのインストールに失敗します。"

# f5fd45b1f55c42979e5792171247d65e
#: ../../installing.rst:36
msgid "Dependencies"
msgstr "依存"

# 62e92932a2a444e3a078bc8e4088c8b0
#: ../../installing.rst:38
msgid "In order for Fabric's installation to succeed, you will need four primary pieces of software:"
msgstr "Fabricのインストールには次の主に4つのソフトウェアが必要です:"

# 4eb4524f9cc04008a327a7644988e378
#: ../../installing.rst:40
msgid "the Python programming language;"
msgstr "Pythonプログラム言語"

# 655a217d864645a98a45f2180059a81b
#: ../../installing.rst:41
msgid "the ``setuptools`` packaging/installation library;"
msgstr "``setuptools`` パッケージング/インストールライブラリ"

# ff82aa20a3c140bfaab73d4c824c82df
#: ../../installing.rst:42
msgid "the Python `Paramiko <http://paramiko.org>`_ SSH library;"
msgstr "Python `Paramiko <http://paramiko.org>`_ SSH ライブラリ"

# 598137d039204227875bd130f087d4dc
#: ../../installing.rst:43
msgid "and Paramiko's dependency, the PyCrypto cryptography library."
msgstr "``paramiko`` の依存、PyCrypto 暗号ライブラリ"

# b0247f3c846d492291e10c5cb2db4477
#: ../../installing.rst:45
msgid "and, if using the :ref:`parallel execution mode <parallel-execution>`:"
msgstr "そしてもし :doc:`parallel execution mode </usage/parallel>` を利用する場合は:"

# bee78f5bc53e44c280726d368ad68b74
#: ../../installing.rst:47
msgid "the `multiprocessing`_ library."
msgstr "`マルチプロセッシング`_ ライブラリ"

# ca4eb6f5ecb24eba99c9f4c4b6ff82c8
#: ../../installing.rst:49
msgid "If you're using Paramiko 1.12 or above, you will also need an additional dependency for Paramiko:"
msgstr "Paramiko 1.12以上を使っている場合は、Paramikoの追加の依存も必要になるでしょう:"

# 206a9c272f374bc4bc8e47d3624e71c5
#: ../../installing.rst:52
msgid "the `ecdsa <https://pypi.python.org/pypi/ecdsa/>`_ library"
msgstr "`ecdsa <https://pypi.python.org/pypi/ecdsa/>`_ ライブラリー"

# c2b77a1bda204596a8aef1bd64796c5e
#: ../../installing.rst:54
msgid "Please read on for important details on these -- there are a few gotchas."
msgstr "各依存については重要な詳細がありますので続けて読み進めてください。知っておいたほうがいいことがいくつかあります。"

# 35239c3a89944c9eb3adac5bcb1c74c8
#: ../../installing.rst:57
msgid "Python"
msgstr "Python"

# 888bb2b976ee4fcb90f439046511bce1
#: ../../installing.rst:59
msgid "Fabric requires `Python <http://python.org>`_ version 2.5 or 2.6. Some caveats and notes about other Python versions:"
msgstr "Fabricは `Python <http://python.org>`_ バージョン2.5もしくは2.6を必要とします。Pythonの他のバージョンについてはいくつかの注意事項があります。"

# fb82c4f22b2445dd9d68910e941931cd
#: ../../installing.rst:62
msgid "We are not planning on supporting **Python 2.4** given its age and the number of useful tools in Python 2.5 such as context managers and new modules. That said, the actual amount of 2.5-specific functionality is not prohibitively large, and we would link to -- but not support -- a third-party 2.4-compatible fork. (No such fork exists at this time, to our knowledge.)"
msgstr "**Python 2.4** をサポートする予定はありません。このバージョンが古いということと、コンテキストマネージャーや新しいモジュールなど、Python 2.5の数多くの便利なツールのためです。とは言え、2.5特有の機能の数は実際には特に多いということはないので、サードパーティの2.4互換フォークへのリンク -- サポートではなく -- を紹介すると思います(今のところ、私たちの知っている限りではまだそうしたフォークはありませんが)。"

# a1a3d32edaed451bb74f4533bb1f18b8
#: ../../installing.rst:67
msgid "Fabric has not yet been tested on **Python 3.x** and is thus likely to be incompatible with that line of development. However, we try to be at least somewhat forward-looking (e.g. using ``print()`` instead of ``print``) and will definitely be porting to 3.x in the future once our dependencies do."
msgstr "Fabricは **Python 3.x** ではまだテストされていませんので互換性がないかもしれません。とはいえ、少なくとも前向きに検討していて(例えば、``print`` ではなく ``print()`` を使用する)、将来的には依存するライブラリ等が3.xに移植されれば間違いなくFabricも3.xに移植します。"

# 9d02342b7ed14aa79c63fdd8609c1efe
#: ../../installing.rst:73
msgid "setuptools"
msgstr "setuptools"

# eb3768afe275439d9151d8846ae38088
#: ../../installing.rst:75
msgid "`Setuptools`_ comes with some Python installations by default; if yours doesn't, you'll need to grab it. In such situations it's typically packaged as ``python-setuptools``, ``py25-setuptools`` or similar. Fabric may drop its setuptools dependency in the future, or include alternative support for the `Distribute`_ project, but for now setuptools is required for installation."
msgstr "`Setuptools`_ はインストールされるPythonによってはデフォルトで同梱されています。もしなければ、入れる必要があります。その場合、たいていはパッケージ名が ``python-setuptools`` や ``py25-setuptools``、もしくは似た名称になっています。Fabricは将来的にはこのsetuptoolsへの依存をなくすか、代替の `Distribute`_ プロジェクトへのサポートを含むようにします。しかし今のところはインストールに setuptools が必要です。"

# 86d317eec01d49f48bc6dc31689375c5
#: ../../installing.rst:85
msgid "``multiprocessing``"
msgstr "``マルチプロセッシング``"

# 3bd23a83b1cd4261a2463f40ad0c8cf1
#: ../../installing.rst:87
msgid "An optional dependency, the ``multiprocessing`` library is included in Python's standard library in version 2.6 and higher. If you're using Python 2.5 and want to make use of Fabric's :ref:`parallel execution features <parallel-execution>` you'll need to install it manually; the recommended route, as usual, is via ``pip``.  Please see the `multiprocessing PyPI page <http://pypi.python.org/pypi/multiprocessing/>`_ for details."
msgstr "オプションの依存である ``multiprocessing`` ライブラリはPythonの2.6以上で標準ライブラリに含まれています。もしPythonの2.5を利用していてFabricの  :ref:`parallel execution features <parallel-execution>` を利用したい場合は、手動でインストールする必要があります。おすすめの方法は、いつもと同じく ``pip`` 経由です。詳細は `マルチプロセッシングPyPIのページ <http://pypi.python.org/pypi/multiprocessing/>`_ をご覧ください。"

# a5ed2a0942764b28a43b4d034d04efd2
#: ../../installing.rst:96
msgid "Early versions of Python 2.6 (in our testing, 2.6.0 through 2.6.2) ship with a buggy ``multiprocessing`` module that appears to cause Fabric to hang at the end of sessions involving large numbers of concurrent hosts. If you encounter this problem, either use :ref:`env.pool_size / -z <pool-size>` to limit the amount of concurrency, or upgrade to Python >=2.6.3."
msgstr "Python 2.6の初期のバージョン(わたしたちのテストでは2.6.0から2.6.2)ではバギーな ``multiprocessing`` モジュールが同梱されていて、並列ホストの数が多い時のセッションの最後にFabricをハングさせることがあるようです。もしこの現象に出くわしたら並列処理の数を制限するために :ref:`env.pool_size / -z <pool-size>` を利用するか、Python 2.6.3位上にアップグレードしてください。"

# 2802be150e4740d38dd20015bb6acf4b
#: ../../installing.rst:103
msgid "Python 2.5 is unaffected, as it requires the PyPI version of ``multiprocessing``, which is newer than that shipped with Python <2.6.3."
msgstr "Python 2.5 では影響はありません。``multiprocessing`` のPyPIバージョンを必要とするからで、これはPython 2.6.3未満で同梱されているものより新しいからです。"

# f20672f9c2b74dd195be6af1b14e9f2e
#: ../../installing.rst:107
msgid "Development dependencies"
msgstr "開発の依存"

# 17bc9d5c3baa49dfb20ecf655cb30de1
#: ../../installing.rst:109
msgid "If you are interested in doing development work on Fabric (or even just running the test suite), you may also need to install some or all of the following packages:"
msgstr "Fabricの開発作業(もしくはただたんにテストの実行)に興味があるのなら、以下のパッケージの一部もしくはすべてをインストールする必要があります:"

# c8e5df71c4ae4a0e8432ee8f913d4199
#: ../../installing.rst:113
msgid "`git <http://git-scm.com>`_ and `Mercurial`_, in order to obtain some of the other dependencies below;"
msgstr "`git <http://git-scm.com>`_ と `Mercurial`_、以下の他の依存を取得するため;"

# 17dbd6c9237c41dd95511480777a6f97
#: ../../installing.rst:115
msgid "`Nose <https://github.com/nose-devs/nose>`_"
msgstr "`Nose <https://github.com/nose-devs/nose>`_"

# d942d310772e42cbb338f7fb39967d3f
#: ../../installing.rst:116
msgid "`Coverage <http://nedbatchelder.com/code/modules/coverage.html>`_"
msgstr "`Coverage <http://nedbatchelder.com/code/modules/coverage.html>`_"

# 7fbb5f26f1504672b8318adc9d95a176
#: ../../installing.rst:117
msgid "`PyLint <http://www.logilab.org/857>`_"
msgstr "`PyLint <http://www.logilab.org/857>`_"

# dd411e0296f847a1914ea88d726c8cbd
#: ../../installing.rst:118
msgid "`Fudge <http://farmdev.com/projects/fudge/index.html>`_"
msgstr "`Fudge <http://farmdev.com/projects/fudge/index.html>`_"

# 602016a83efc437ca1749ae1a42e8648
#: ../../installing.rst:119
msgid "`Sphinx <http://sphinx.pocoo.org/>`_"
msgstr "`Sphinx <http://sphinx.pocoo.org/>`_"

# 27e2a578c58a4adf97e42aa1290ae428
#: ../../installing.rst:121
msgid "For an up-to-date list of exact testing/development requirements, including version numbers, please see the ``requirements.txt`` file included with the source distribution. This file is intended to be used with ``pip``, e.g. ``pip install -r requirements.txt``."
msgstr "テスト/開発に必要なものやバージョンの正確な最新の一覧は配布ソースに含まれている ``requirements.txt`` ファイルを参照してください。このファイルは  ``pip install -r requirements.txt`` など ``pip`` の利用を前提としています。"

# 228634f88a1c45b5b8d362f8e5e406fc
#: ../../installing.rst:132
msgid "Downloads"
msgstr "ダウンロード"

# 3ffe698512694976a4ce82e08da45a5e
#: ../../installing.rst:134
msgid "To obtain a tar.gz or zip archive of the Fabric source code, you may visit `Fabric's PyPI page <http://pypi.python.org/pypi/Fabric>`_, which offers manual downloads in addition to being the entry point for ``pip`` and ``easy-install``."
msgstr "Fabricソースコードのtar.gzもしくはzipアーカイブを取得するには `FabricのPyPIページ <http://pypi.python.org/pypi/Fabric>`_ を参照してください。 ``pip`` や ``easy-install`` 以外の手動でのダウンロードができます。"

# f14755ffb5ec4df78086b3e3a01ce3d4
#: ../../installing.rst:143
msgid "Source code checkouts"
msgstr "ソースコードのチェックアウト"

# 3b09a4fdc70b4ab0a0a0fe3069193937
#: ../../installing.rst:145
msgid "The Fabric developers manage the project's source code with the `Git <http://git-scm.com>`_ DVCS. To follow Fabric's development via Git instead of downloading official releases, you have the following options:"
msgstr "Fabricの開発者は `Git <http://git-scm.com>`_ DVCSでプロジェクトのソースコードを管理しています。公式のリリースをダウンロードするのではなくGit経由でFabricの開発を追うのなら、次のオプションがあります:"

# 7aaf097c5fba4aa99d27bbc16b11bf68
#: ../../installing.rst:149
msgid "Clone the canonical repository straight from `the Fabric organization's repository on Github <https://github.com/fabric/fabric>`_, ``git://github.com/fabric/fabric.git``"
msgstr "`Github上のFabricオーガナイザーのリポジトリ <https://github.com/fabric/fabric>`_、 ``git://github.com/fabric/fabric.git`` から正規のリポジトリをクローンする"

# 992b59c254534be28fafdc53f2fe04c7
#: ../../installing.rst:152
msgid "Make your own fork of the Github repository by making a Github account, visiting `fabric/fabric <http://github.com/fabric/fabric>`_ and clicking the \"fork\" button."
msgstr "GitHubアカウントを作成し、 `fabric/fabric <http://github.com/fabric/fabric>`_ を開き \"fork\" ボタンをクリックしてGitHubリポジトリからフォークする"

# 4859c2b639ca4259be40baaf86d7e92d
#: ../../installing.rst:158
msgid "If you've obtained the Fabric source via source control and plan on updating your checkout in the future, we highly suggest using ``python setup.py develop`` instead -- it will use symbolic links instead of file copies, ensuring that imports of the library or use of the command-line tool will always refer to your checkout."
msgstr "Fabricのソースをソース管理経由で取得し、将来もそのチェックアウトをアップデートするつもりなら、 ``python setup.py develop`` の利用を強くおすすめします。これはファイルのコピーの代わりにシンボリックリンクを利用し、ライブラリーのインポートやコマンドラインツールの利用で常にそのチェックアウトを参照するようにします。"

# a084769c124d42c2bd889918d8084800
#: ../../installing.rst:164
msgid "For information on the hows and whys of Fabric development, including which branches may be of interest and how you can help out, please see the :doc:`development` page."
msgstr "Fabric開発の詳細、面白そうなブランチ、協力方法については :doc:`development` のページを参照してください。"

# d2af67c6b07b4d5bac1d3f8d0a8c302f
#: ../../installing.rst:172
msgid "ActivePython and PyPM"
msgstr "ActivePythonとPyPM"

# b285530e68734cfd89ae9383933952fc
#: ../../installing.rst:174
msgid "Windows users who already have ActiveState's `ActivePython <http://www.activestate.com/activepython/downloads>`_ distribution installed may find Fabric is best installed with `its package manager, PyPM <http://code.activestate.com/pypm/>`_. Below is example output from an installation of Fabric via ``pypm``::"
msgstr "ActiveStateの `ActivePython <http://www.activestate.com/activepython/downloads>`_ ディストリビューションがすでにインストールされているWindowsユーザーは、`そのパッケージマネージャーのPyPM <http://code.activestate.com/pypm/>`_ でFabricをインストールするのが一番です。以下は ``pypm`` 経由でFabricをインストールする時の出力の例です::"
