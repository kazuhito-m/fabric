# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-11 15:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/core/tasks.rst:3
# 1eb21de631cc49c89121885b2e61645a
msgid "Tasks"
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task:1
# ab1181a980b84e31badde29641c52117
msgid "Abstract base class for objects wishing to be picked up as Fabric tasks."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task:3
# edc63a1419c4410696f75410fe2227b3
msgid "Instances of subclasses will be treated as valid tasks when present in fabfiles loaded by the :doc:`fab </usage/fab>` tool."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task:6
# 1f2a0f8080ca4464a44a27bb5a86a33f
msgid "For details on how to implement and use `~fabric.tasks.Task` subclasses, please see the usage documentation on :ref:`new-style tasks <new-style-tasks>`."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task.__weakref__:1
# bb02c01005ac4a15acc069d926190a4f
msgid "list of weak references to the object (if defined)"
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task.get_hosts_and_effective_roles:1
# 7067bfd43d0c4cbb9b42fbc3dddaa16c
msgid "Return a tuple containing the host list the given task should be using and the roles being used."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.Task.get_hosts_and_effective_roles:4
# 8c78321d8de54c31982d737cf4e0d14d
msgid "See :ref:`host-lists` for detailed documentation on how host lists are set."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:1
# b85c612dec814825a763a0a1363afbfd
msgid "Wraps a given callable transparently, while marking it as a valid Task."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:3
# 60df490d0ed24683a2e07d996acf8bfb
msgid "Generally used via `~fabric.decorators.task` and not directly."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:7
# 6dd2c39bb7804ea6abd0a0cb4d372c4e
msgid "`~fabric.docs.unwrap_tasks`, `~fabric.decorators.task`"
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:1
# 8c6e8c8d467c4b60b897bff1a303fe22
msgid "Execute ``task`` (callable or name), honoring host/role decorators, etc."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:3
# 5b7ff573c02d4dd8a0dec69d45273614
msgid "``task`` may be an actual callable object, or it may be a registered task name, which is used to look up a callable just as if the name had been given on the command line (including :ref:`namespaced tasks <namespaces>`, e.g. ``\"deploy.migrate\"``."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:8
# a0c423d20885464689ccced80cf5f47c
msgid "The task will then be executed once per host in its host list, which is (again) assembled in the same manner as CLI-specified tasks: drawing from :option:`-H`, :ref:`env.hosts <hosts>`, the `~fabric.decorators.hosts` or `~fabric.decorators.roles` decorators, and so forth."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:13
# a01e65456d474e54acba323191816668
msgid "``host``, ``hosts``, ``role``, ``roles`` and ``exclude_hosts`` kwargs will be stripped out of the final call, and used to set the task's host list, as if they had been specified on the command line like e.g. ``fab taskname:host=hostname``."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:18
# 7698cc872fe74e02a770f7697ce13657
msgid "Any other arguments or keyword arguments will be passed verbatim into ``task`` (the function itself -- not the ``@task`` decorator wrapping your function!) when it is called, so ``execute(mytask, 'arg1', kwarg1='value')`` will (once per host) invoke ``mytask('arg1', kwarg1='value')``."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:24
# e05ed2580510470ca789e7eff7831d31
msgid "a dictionary mapping host strings to the given task's return value for that host's execution run. For example, ``execute(foo, hosts=['a', 'b'])`` might return ``{'a': None, 'b': 'bar'}`` if ``foo`` returned nothing on host `a` but returned ``'bar'`` on host `b`.  In situations where a task execution fails for a given host but overall progress does not abort (such as when :ref:`env.skip_bad_hosts <skip-bad-hosts>` is True) the return value for that host will be the error object or message."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:25
# 6a98f9ed962c44ad96a16dafa1f2c9e1
msgid "a dictionary mapping host strings to the given task's return value for that host's execution run. For example, ``execute(foo, hosts=['a', 'b'])`` might return ``{'a': None, 'b': 'bar'}`` if ``foo`` returned nothing on host `a` but returned ``'bar'`` on host `b`."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:30
# 4a5c48c1f02b4c5486a2781914996231
msgid "In situations where a task execution fails for a given host but overall progress does not abort (such as when :ref:`env.skip_bad_hosts <skip-bad-hosts>` is True) the return value for that host will be the error object or message."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:36
# a8f1186b954c442491f082873b92b5ea
msgid ":ref:`The execute usage docs <execute>`, for an expanded explanation and some examples."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.execute:40
# 788bc004bdc041938d64e41c8cc64a1b
msgid "Added the return value mapping; previously this function had no defined return value."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.requires_parallel:1
# 4fb276a5c9ed42dd8c63bfe08e8906f9
msgid "Returns True if given ``task`` should be run in parallel mode."
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.requires_parallel:3
# f5a1f6597ea24e7189de3649de9ffab5
msgid "Specifically:"
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.requires_parallel:5
# 5b3a4bf30b28410699026d7e083caba7
msgid "It's been explicitly marked with ``@parallel``, or:"
msgstr ""

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/tasks.py:docstring of fabric.tasks.requires_parallel:6
# 277e2eddce0946329a9419a373d161b1
msgid "It's *not* been explicitly marked with ``@serial`` *and* the global parallel option (``env.parallel``) is set to ``True``."
msgstr ""

