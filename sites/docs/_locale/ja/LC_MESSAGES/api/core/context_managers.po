#
msgid ""
msgstr ""
"Project-Id-Version: Fabric 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-31 11:06+0900\n"
"PO-Revision-Date: 2015-01-04 09:29+0900\n"
"Last-Translator: JOTAKI, Taisuke <tekapo@gmail.com>\n"
"Language-Team: LANGUAGE <tekapo@gmail.com>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.7.1\n"

#: ../../api/core/context_managers.rst:3
msgid "Context Managers"
msgstr "コンテキストマネージャー"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:1
msgid "Context managers for use with the ``with`` statement."
msgstr "コンテキストマネージャーは ``with`` とともに使用します。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:3
msgid ""
"When using Python 2.5, you will need to start your fabfile with ``from __future__ import with_statement`` in order to make use of the ``with`` statement (which is a regular, non "
"``__future__`` feature of Python 2.6+.)"
msgstr ""
"Python 2.5の利用時、 ``with`` ステートメントを利用するためにはfabfileを ``from __future__ import with_statement`` から始める必要があります(Python 2.6以上では通常の非 non ``__future__`` 機"
"能です)。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:8
msgid "If you are using multiple directly nested ``with`` statements, it can be convenient to use multiple context expressions in one single with statement. Instead of writing::"
msgstr ""
"ダイレクトにネストされている複数の ``with`` ステートメントを使用する場合、1つのwithステートメント内に複数のコンテキスト表現を用いたほうが便利なことがあります。次のように書く代わりに::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:17
msgid "you can write::"
msgstr "次のように書くことができます::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:23
msgid "Note that you need Python 2.7+ for this to work. On Python 2.5 or 2.6, you can do the following::"
msgstr "このようにするにはPython 2.7以上が必要です。Python 2.5もしくは2.6では次のようにします::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers:31
msgid "Finally, note that `~fabric.context_managers.settings` implements ``nested`` itself -- see its API doc for details."
msgstr "最後に `~fabric.context_managers.settings` は ``nested`` 自身を実装していることに留意してください。詳しくはこのAPIドキュメントをご覧ください。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:1
msgid "Context manager that keeps directory state when calling remote operations."
msgstr "コンテキストマネージャーはリモート操作を呼び出すときにはディレクトリの状態を維持します。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:3
msgid ""
"Any calls to `run`, `sudo`, `get`, or `put` within the wrapped block will implicitly have a string similar to ``\"cd <path> && \"`` prefixed in order to give the sense that there is "
"actually statefulness involved."
msgstr ""
"これでラップされたブロック内の `run`、 `sudo`、 `get`、 `put` へのどんな呼び出しも、実際に状態が維持されているという意味を持たせるために ``\"cd <path> && \"`` がプリフィックスされたのと似"
"た文字列を暗に含みます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:8
msgid "`cd` only affects *remote* paths -- to modify *local* paths, use `~fabric.context_managers.lcd`."
msgstr "`cd` は *リモート* のパスでのみ作用します。 *ローカル* パスを変更するには `~fabric.context_managers.lcd` を使います。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:11
msgid "Because use of `cd` affects all such invocations, any code making use of those operations, such as much of the ``contrib`` section, will also be affected by use of `cd`."
msgstr "`cd` の利用はこうしたすべての実行に影響を与えるので、``contrib`` セクションの多くなど、うした操作を行うコードもまた `cd` の利用に影響を受けます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:15
msgid ""
"Like the actual 'cd' shell builtin, `cd` may be called with relative paths (keep in mind that your default starting directory is your remote user's ``$HOME``) and may be nested as well."
msgstr ""
"実際のシェルビルトインの `cd` のように、 `cd` は相対パスで呼び出すことができ(最初のディレクトリのデフォルトはリモートユーザーの ``$HOME`` であることに気をつけてください)、ネストすることも"
"可能です。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:19
msgid ""
"Below is a \"normal\" attempt at using the shell 'cd', which doesn't work due to how shell-less SSH connections are implemented -- state is **not** kept between invocations of `run` or "
"`sudo`::"
msgstr "下の例はシェルの `cd` を使った \"ノーマルな\" 試みで、 `run` もしくは `sudo` の実行と実行の間の状態が維持 **されない** というシェルなしSSH接続の実装のため動作しません。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:26
msgid "The above snippet will list the contents of the remote user's ``$HOME`` instead of ``/var/www``. With `cd`, however, it will work as expected::"
msgstr "上の例は ``/var/www`` ではなく、リモートユーザーの ``$HOME`` のコンテンツの一覧を表示します。`cd` とともに使うと期待通りに動作します::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:32
msgid "Finally, a demonstration (see inline comments) of nesting::"
msgstr "最後に、ネストの例(インラインのコメントをご覧ください)をお見せします::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:41
msgid ""
"This context manager is currently implemented by appending to (and, as always, restoring afterwards) the current value of an environment variable, ``env.cwd``. However, this "
"implementation may change in the future, so we do not recommend manually altering ``env.cwd`` -- only the *behavior* of `cd` will have any guarantee of backwards compatibility."
msgstr ""
"このコンテキストマネージャーは環境変数のカレントの値、 ``env.cwd`` に追加することによって実装されています(そして、いつものようにその後もとの状態にもどします)。とは言え、この実装は将来的に"
"は変更されるかもしれませんので、手動で ``env.cwd`` に変更することはおすすめしません。後方互換性を保証するのは `cd` の *挙動* のみです。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:50
msgid "Space characters will be escaped automatically to make dealing with such directory names easier."
msgstr "空白文字を含むディレクトリ名を扱うため、空白文字は自動的にエスケープされます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:53
msgid "Applies to `get` and `put` in addition to the command-running operations."
msgstr "コマンドでの操作に加え、 `get` と `put` にも適用されます。\t"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.cd:57
msgid "`~fabric.context_managers.lcd`"
msgstr "`~fabric.context_managers.lcd`"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.char_buffered:1
msgid "Force local terminal ``pipe`` be character, not line, buffered."
msgstr "ローカルターミナルの ``パイプ`` を行ごとではなく文字ごとに強制的にバッファします。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.char_buffered:3
msgid "Only applies on Unix-based systems; on Windows this is a no-op."
msgstr "ユニックスベースのシステムのみの適用されます。Windowsでは操作できません。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.hide:1
msgid "Context manager for setting the given output ``groups`` to False."
msgstr "与えられた出力 ``groups`` をFalseにセットするためにコンテキストマネージャー。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.hide:3
msgid ""
"``groups`` must be one or more strings naming the output groups defined in `~fabric.state.output`. The given groups will be set to False for the duration of the enclosed block, and "
"restored to their previous value afterwards."
msgstr ""
"``groups`` は `~fabric.state.output` で定義された出力グループを命名している1つ以上の文字列でなければなりません。与えられたグループは、囲まれたブロックでの継続性のためFalseにセットされ、そ"
"の後は前の状態に戻ります。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.hide:8
msgid "For example, to hide the \"[hostname] run:\" status lines, as well as preventing printout of stdout and stderr, one might use `hide` as follows::"
msgstr "例えば、 \"[hostname] run:\" のステータスラインを隠し、同じように標準出力と標準エラー出力を表示させないようにするには、次のように `hide` を利用することができます::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.lcd:1
msgid "Context manager for updating local current working directory."
msgstr "ローカルのカレントワーキングディレクトリを更新するためのコンテキストマネージャー。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.lcd:3
msgid ""
"This context manager is identical to `~fabric.context_managers.cd`, except that it changes a different env var (`lcwd`, instead of `cwd`) and thus only affects the invocation of `~fabric."
"operations.local` and the local arguments to `~fabric.operations.get`/`~fabric.operations.put`."
msgstr ""
"このコンテキストマネージャーは `~fabric.context_managers.cd` と同じですが、別の環境変数(`cwd` ではなく `lcwd`)を変更するので、 `~fabric.operations.local` の実行と `~fabric.operations."
"get`/`~fabric.operations.put` へのローカルの引数のみに影響を与えます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.lcd:8
msgid ""
"Relative path arguments are relative to the local user's current working directory, which will vary depending on where Fabric (or Fabric-using code) was invoked. You can check what this "
"is with `os.getcwd <http://docs.python.org/release/2.6/library/os.html#os.getcwd>`_. It may be useful to pin things relative to the location of the fabfile in use, which may be found in :"
"ref:`env.real_fabfile <real-fabfile>`"
msgstr ""
"相対パスの引数はローカルユーザーのカレントのワーキングディレクトリに対する相対になり、Fabric(もしくはFabricを使うコード)がどこで実行されるかによって違ってきます。これは `os.getcwd "
"<http://docs.python.org/release/2.6/library/os.html#os.getcwd>`_ で確認できます。fabfileが利用されている場所からの相対に固定すると便利かもしれません。それは :ref:`env.real_fabfile <real-"
"fabfile>` で確認できます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:1
msgid "Append the given ``path`` to the PATH used to execute any wrapped commands."
msgstr "ラップされたコマンド実行するために使われるパスに与えられた ``path`` を追加します。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:3
msgid "Any calls to `run` or `sudo` within the wrapped block will implicitly have a string similar to ``\"PATH=$PATH:<path> \"`` prepended before the given command."
msgstr "これで囲まれたブロック内の `run` もしくは `sudo` に対するどんな呼び出しも、与えられたコマンドの前に ``\"PATH=$PATH:<path> \"`` に似た文字列を暗黙のうちに追加されます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:7
msgid "You may customize the behavior of `path` by specifying the optional ``behavior`` keyword argument, as follows:"
msgstr "次のように、オプションの ``behavior`` キーワード引数を指定することによって `path` の挙動をカスタマイズできます:"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:10
msgid "``'append'``: append given path to the current ``$PATH``, e.g. ``PATH=$PATH:<path>``. This is the default behavior."
msgstr "``'append'``: カレントの ``$PATH`` に与えられたパスを追加します。例えば ``PATH=$PATH:<path>`` です。これはデフォルトの挙動になります。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:12
msgid "``'prepend'``: prepend given path to the current ``$PATH``, e.g. ``PATH=<path>:$PATH``."
msgstr "``'prepend'``: カレントの ``$PATH`` に与えられたパスを前に追加します。例えば ``PATH=<path>:$PATH`` です。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:14
msgid "``'replace'``: ignore previous value of ``$PATH`` altogether, e.g. ``PATH=<path>``."
msgstr "``'replace'``: ``$PATH`` の前の値を完全に無視します。例えば ``PATH=<path>`` となります。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.path:19
msgid ""
"This context manager is currently implemented by modifying (and, as always, restoring afterwards) the current value of environment variables, ``env.path`` and ``env.path_behavior``. "
"However, this implementation may change in the future, so we do not recommend manually altering them directly."
msgstr ""
"このコンテキストマネージャーは、環境変数 ``env.path`` と ``env.path_behavior`` のカレントの値を変更する(そしていつものようにその後に元に戻す)ように今は実装されています。しかし、この実装は"
"将来的には変更されるかもしれないので直接手動で変更することはおすすめしません。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:1
msgid "Prefix all wrapped `run`/`sudo` commands with given command plus ``&&``."
msgstr "囲まれたすべての `run`/`sudo` コマンドの前に、与えられたコマンドと ``&&`` を追加します。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:3
msgid "This is nearly identical to `~fabric.operations.cd`, except that nested invocations append to a list of command strings instead of modifying a single string."
msgstr "これは `~fabric.operations.cd` とほとんど同一ですが、1つの文字列を変更する代わりにコマンド文字列のリストに、ネストされた呼び出しが追加されます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:7
msgid "Most of the time, you'll want to be using this alongside a shell script which alters shell state, such as ones which export or alter shell environment variables."
msgstr "たいていの場合、シェル環境変数をエクスポートしたり変更するような、シェルの状態を変えるシェルスクリプトと一緒に使うといいでしょう。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:11
msgid "For example, one of the most common uses of this tool is with the ``workon`` command from `virtualenvwrapper <http://www.doughellmann.com/projects/virtualenvwrapper/>`_::"
msgstr "例えば、このツールのもっとも一般的な利用方法の1つは `virtualenvwrapper <http://www.doughellmann.com/projects/virtualenvwrapper/>`_ からの ``workon`` コマンドと使うものです::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:18
msgid "In the above snippet, the actual shell command run would be this::"
msgstr "上記の例では、実際のシェルコマンドの実行はこのようになります::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:22
msgid "This context manager is compatible with `~fabric.context_managers.cd`, so if your virtualenv doesn't ``cd`` in its ``postactivate`` script, you could do the following::"
msgstr ""
"このコンテキストマネージャーは `~fabric.context_managers.cd` と互換性があるので、もし自分の virtualenv がその ``postactivate`` スクリプトで ``cd`` できないときは次ようにもできます::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:31
msgid "Which would result in executions like so::"
msgstr "これは、実行時には次のような結果になります::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:36
msgid "Finally, as alluded to near the beginning, `~fabric.context_managers.prefix` may be nested if desired, e.g.::"
msgstr "最後に、冒頭近くで示唆したように、`~fabric.context_managers.prefix` はお好みのようにネストできます。例えば::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:44
msgid "The result::"
msgstr "結果::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.prefix:49
msgid "Contrived, but hopefully illustrative."
msgstr "不自然かもしれませんが、説明的だと思います。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.quiet:1
msgid "Alias to ``settings(hide('everything'), warn_only=True)``."
msgstr "``settings(hide('everything'), warn_only=True)`` へのエイリアス。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.quiet:3
msgid "Useful for wrapping remote interrogative commands which you expect to fail occasionally, and/or which you want to silence."
msgstr "時折失敗が予期されるかつ/もしくは何も表示させたくない疑問形のリモートコマンドをラップするときに便利です。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.quiet:6
msgid "Example::"
msgstr "例::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.quiet:11
msgid "When used in a task, the above snippet will not produce any ``run: test -e /tmp/build`` line, nor will any stdout/stderr display, and command failure is ignored."
msgstr "タスク内で使用されると、上記スニペットは ``run: test -e /tmp/build`` の行を生成せず、また、標準出力/標準エラー出力のまったく表示させず、コマンドの失敗は無視されます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.quiet:16
msgid ":ref:`env.warn_only <warn_only>`, `~fabric.context_managers.settings`, `~fabric.context_managers.hide`"
msgstr ":ref:`env.warn_only <warn_only>`、 `~fabric.context_managers.settings`、 `~fabric.context_managers.hide`"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:1
msgid "Create a tunnel forwarding a locally-visible port to the remote target."
msgstr "ローカルの開いているポートからリモートのターゲットにトンネルフォワーディングを作成します。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:3
msgid "For example, you can let the remote host access a database that is installed on the client host::"
msgstr "例えば、クライアントホストにインストールしてあるデータベースへリモートからアクセスさせます::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:12
msgid "The database might be installed on a client only reachable from the client host (as opposed to *on* the client itself)::"
msgstr "データベースは、クライアントホストからのみ接続可能なクライアント上にインストールされているとします(クライアント自身の *上に* あるのとは対照的に)::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:19
msgid "``remote_tunnel`` accepts up to four arguments:"
msgstr "``remote_tunnel`` は4個までの引き数を取ります:"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:21
msgid "``remote_port`` (mandatory) is the remote port to listen to."
msgstr "``remote_port`` (必須)リッスンするリモートホストのポート。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:22
msgid "``local_port`` (optional) is the local port to connect to; the default is the same port as the remote one."
msgstr "``local_port`` (オプション) は接続するローカルのポートです。デフォルトはリモートのポートと同じポートです。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:24
msgid "``local_host`` (optional) is the locally-reachable computer (DNS name or IP address) to connect to; the default is ``localhost`` (that is, the same computer Fabric is running on)."
msgstr ""
"``local_host`` (オプション) は接続するローカルで到達可能なコンピュータ(DNS名かIPアドレス)です。デフォルトは ``localhost`` です(これはつまり、Fabricが動いているのと同じコンピュータのことで"
"す)。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:27
msgid ""
"``remote_bind_address`` (optional) is the remote IP address to bind to for listening, on the current target. It should be an IP address assigned to an interface on the target (or a DNS "
"name that resolves to such IP). You can use \"0.0.0.0\" to bind to all interfaces."
msgstr ""
"``remote_bind_address``  (オプション) は、カレントターゲット上のリッスンするためにバインドするためのリモートのIPアドレスです。これはターゲット上のインターフェースに割り当てられたIPである"
"必要があります(もしくはそうしたIPをリゾルブするDNS名)。すべてのインターフェースにバインドするには \"0.0.0.0\" を使います。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.remote_tunnel:33
msgid ""
"By default, most SSH servers only allow remote tunnels to listen to the localhost interface (127.0.0.1). In these cases, `remote_bind_address` is ignored by the server, and the tunnel "
"will listen only to 127.0.0.1."
msgstr ""
"デフォルトでは、たいていのSSHサーバはリモートトンネルにローカルホストのインターフェース(127.0.0.1)をリッスンすることしか許可していません。こうしたケースでは `remote_bind_address` はサー"
"バーによって無視され、トンネルは127.0.0.1だけをリッスンします。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:1
msgid "Nest context managers and/or override ``env`` variables."
msgstr "コンテキストマネージャーをネストおよび/もしくは ``env`` 変数を上書きします。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:3
msgid "`settings` serves two purposes:"
msgstr "`settings` には2つの目的があります:"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:5
msgid ""
"Most usefully, it allows temporary overriding/updating of ``env`` with any provided keyword arguments, e.g. ``with settings(user='foo'):``. Original values, if any, will be restored once "
"the ``with`` block closes."
msgstr ""
"もっとも便利なのが、 ``env`` を与えられるどんなキーワード引き数、例えば ``with settings(user='foo'):`` などで一時的に上書き更新できることです。元の値は、もしあればですが、``with`` ブロッ"
"クが閉じられると戻されます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:9
msgid "The keyword argument ``clean_revert`` has special meaning for ``settings`` itself (see below) and will be stripped out before execution."
msgstr "キーワード引き数 ``clean_revert`` は ``settings`` 自身にとっては特別な意味を持ち(下記参照)、実行前に取り除かれます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:13
msgid ""
"In addition, it will use `contextlib.nested`_ to nest any given non-keyword arguments, which should be other context managers, e.g. ``with settings(hide('stderr'), show('stdout')):``."
msgstr ""
"加えて、 `contextlib.nested`_ を使うと、与えられたどんな非キーワード引き数でもネストできます。これは他のコンテキストマネージャーである必要がありますが、例えば ``with "
"settings(hide('stderr'), show('stdout')):`` などです。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:19
msgid "These behaviors may be specified at the same time if desired. An example will hopefully illustrate why this is considered useful::"
msgstr "これらの挙動は望めば同時に指定することも可能です。これがなぜ便利であるのかは例でわかりやすく説明します::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:32
msgid ""
"The above task executes a `run` statement, but will warn instead of aborting if the ``ls`` fails, and all output -- including the warning itself -- is prevented from printing to the "
"user. The end result, in this scenario, is a completely silent task that allows the caller to figure out what type of system the remote host is, without incurring the handful of output "
"that would normally occur."
msgstr ""
"上のタスクは `run` 命令文を実行しますが、もし ``ls`` が失敗した場合に中断するのではなく警告を出し、その警告自身を含めたすべての出力はユーザーには表示されません。その結果としてこのシナリオ"
"では、通常であれば発生するたくさんの出力を発生させずに、リモートホストがどのシステムのタイプなのかを呼び出しが判別することができる完全に静かなタスクとなります。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:39
msgid ""
"Thus, `settings` may be used to set any combination of environment variables in tandem with hiding (or showing) specific levels of output, or in tandem with any other piece of Fabric "
"functionality implemented as a context manager."
msgstr ""
"したがって `settings` は、特定のレベルの出力を隠す(もしくは表示する)のとともに、もしくはコンテキストマネージャーとして実装された他のFabricの機能のひとつとともに、環境変数とのどんな組み合"
"わせでもセットするために利用可能です。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:44
msgid ""
"If ``clean_revert`` is set to ``True``, ``settings`` will **not** revert keys which are altered within the nested block, instead only reverting keys whose values remain the same as those "
"given. More examples will make this clear; below is how ``settings`` operates normally::"
msgstr ""
"``clean_revert`` が ``True`` にセットされると、``settings`` はネストされたブロック内で変更されたキーは **元には戻しません** 。その代わり、与えられたときと同じ値を持つキーだけを元に戻しま"
"す。さらに例をご覧になるとより理解できるでしょう。以下は ``settings`` の通常の動作です::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:59
msgid "The internal modification of ``env.host_string`` is nullified -- not always desirable. That's where ``clean_revert`` comes in::"
msgstr "``env.host_string`` の内部での変更は取り消されていますが、これが常に希望の状態であるとは限りません。ここで ``clean_revert`` の登場です::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:72
msgid ""
"Brand new keys which did not exist in ``env`` prior to using ``settings`` are also preserved if ``clean_revert`` is active. When ``False``, such keys are removed when the block exits."
msgstr "``clean_revert`` 有効時には ``settings`` の利用前に ``env`` に存在しなかった新しいキーも保存されます。``False`` の時はこうしたキーはブロック終了時に取り除かれます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.settings:76
msgid "The ``clean_revert`` kwarg."
msgstr "``clean_revert`` キーワード引数。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.shell_env:1
msgid "Set shell environment variables for wrapped commands."
msgstr "ラップされたコマンドのためのシェル環境変数をセットします。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.shell_env:3
msgid "For example, the below shows how you might set a ZeroMQ related environment variable when installing a Python ZMQ library::"
msgstr "例えば、以下はPythonのZMQライブラリをインストールするときに関連する環境変数をどのようにセットするのかをお見せしています::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.shell_env:9
msgid "As with `~fabric.context_managers.prefix`, this effectively turns the ``run`` command into::"
msgstr "`~fabric.context_managers.prefix` と同様に、これは実質的に ``run`` コマンドを以下に変更します::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.shell_env:14
msgid "Multiple key-value pairs may be given simultaneously."
msgstr "複数のキーバリューペアを同時に与えることができます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.shell_env:17
msgid "If used to affect the behavior of `~fabric.operations.local` when running from a Windows localhost, ``SET`` commands will be used to implement this feature."
msgstr "Windowsのローカルホストから実行したときに `~fabric.operations.local` の挙動に営業が出る場合、この機能の実装には ``SET`` コマンドが使われます。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.show:1
msgid "Context manager for setting the given output ``groups`` to True."
msgstr "与えられた出力 ``groups`` をTrueにセットするためにコンテキストマネージャー。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.show:3
msgid ""
"``groups`` must be one or more strings naming the output groups defined in `~fabric.state.output`. The given groups will be set to True for the duration of the enclosed block, and "
"restored to their previous value afterwards."
msgstr ""
"``groups`` は `~fabric.state.output` で定義された出力グループを命名している1つ以上の文字列でなければなりません。与えられたグループは、囲まれたブロックでの継続性のためTrueにセットされ、そ"
"の後は前の状態に戻ります。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.show:8
msgid "For example, to turn on debug output (which is typically off by default)::"
msgstr "例えば、デバッグ出力を有効にします(デフォルトではたいていオフになっています)::"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.show:14
msgid ""
"As almost all output groups are displayed by default, `show` is most useful for turning on the normally-hidden ``debug`` group, or when you know or suspect that code calling your own "
"code is trying to hide output with `hide`."
msgstr ""
"ほぼすべての出力グループがデフォルトでは表示されますが、通常は非表示になっている ``debug`` グループをオンにしたり、ご自分のコードを呼び出すコードが `hide` で出力を隠そうとしていることを"
"知っていたり疑っていたりする場合に `show` はとても有用です。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.warn_only:1
msgid "Alias to ``settings(warn_only=True)``."
msgstr "``settings(warn_only=True)`` のエイリアスです。"

#: ../../../../../../../../../usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/Fabric-1.10.0-py2.7.egg/fabric/context_managers.py:docstring
#: of fabric.context_managers.warn_only:4
msgid ":ref:`env.warn_only <warn_only>`, `~fabric.context_managers.settings`, `~fabric.context_managers.quiet`"
msgstr ":ref:`env.warn_only <warn_only>`、 `~fabric.context_managers.settings`、 `~fabric.context_managers.quiet`"
