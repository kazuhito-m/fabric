# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Christian Vest Hansen and Jeffrey E. Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-15 23:41+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/core/tasks.rst:3
# 953221d56b4a48abaea47b2a535cb985
msgid "Tasks"
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.Task:1
# f851552b5d7c48738a4c10792441111b
msgid "Abstract base class for objects wishing to be picked up as Fabric tasks."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.Task:3
# abc66247ed7b4e09955bf26ed8ef2a4a
msgid "Instances of subclasses will be treated as valid tasks when present in fabfiles loaded by the :doc:`fab </usage/fab>` tool."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.Task:6
# 53979bc1f944469385047af7394932f1
msgid "For details on how to implement and use `~fabric.tasks.Task` subclasses, please see the usage documentation on :ref:`new-style tasks <new-style-tasks>`."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.Task.get_hosts:1
# 7b5b2ad9a4fd4c2cadf295a7052ecafb
msgid "Return the host list the given task should be using."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.Task.get_hosts:3
# 35ea6cbdb34d4ce5a8cc8a8302bd5821
msgid "See :ref:`host-lists` for detailed documentation on how host lists are set."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:1
# 18afbb5000cf4300ab77dc4e2d7ed1ea
msgid "Wraps a given callable transparently, while marking it as a valid Task."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:3
# 91e0f4df63704115a3836bc2eecbc553
msgid "Generally used via `~fabric.decorators.task` and not directly."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.WrappedCallableTask:7
# 701ae2d7763d47feb5cf8a96c8d32891
msgid "`~fabric.docs.unwrap_tasks`, `~fabric.decorators.task`"
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:1
# 3f6cef8d3cbb4d2e934c69cf9d3c96fe
msgid "Execute ``task`` (callable or name), honoring host/role decorators, etc."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:3
# d71be415e4404f8b9cc97156ff5dfe3a
msgid "``task`` may be an actual callable object, or it may be a registered task name, which is used to look up a callable just as if the name had been given on the command line (including :ref:`namespaced tasks <namespaces>`, e.g. ``\"deploy.migrate\"``."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:8
# 0641ff40c860465e86f10be0f517057c
msgid "The task will then be executed once per host in its host list, which is (again) assembled in the same manner as CLI-specified tasks: drawing from :option:`-H`, :ref:`env.hosts <hosts>`, the `~fabric.decorators.hosts` or `~fabric.decorators.roles` decorators, and so forth."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:13
# ba46ec0838fb42bab69f21cd30f0b8a8
msgid "``host``, ``hosts``, ``role``, ``roles`` and ``exclude_hosts`` kwargs will be stripped out of the final call, and used to set the task's host list, as if they had been specified on the command line like e.g. ``fab taskname:host=hostname``."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:18
# 558be989c4e74fb5991dea3f76b752eb
msgid "Any other arguments or keyword arguments will be passed verbatim into ``task`` (the function itself -- not the ``@task`` decorator wrapping your function!) when it is called, so ``execute(mytask, 'arg1', kwarg1='value')`` will (once per host) invoke ``mytask('arg1', kwarg1='value')``."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:24
# 3d8cb9c2658b47ce8af89a2552d983b1
msgid "a dictionary mapping host strings to the given task's return value for that host's execution run. For example, ``execute(foo, hosts=['a', 'b'])`` might return ``{'a': None, 'b': 'bar'}`` if ``foo`` returned nothing on host `a` but returned ``'bar'`` on host `b`.  In situations where a task execution fails for a given host but overall progress does not abort (such as when :ref:`env.skip_bad_hosts <skip-bad-hosts>` is True) the return value for that host will be the error object or message."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:25
# 58e46c50138b4eb084b830a604d7c3c1
msgid "a dictionary mapping host strings to the given task's return value for that host's execution run. For example, ``execute(foo, hosts=['a', 'b'])`` might return ``{'a': None, 'b': 'bar'}`` if ``foo`` returned nothing on host `a` but returned ``'bar'`` on host `b`."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:30
# c4b1f0c510744d2cb26f8cb6a211acd3
msgid "In situations where a task execution fails for a given host but overall progress does not abort (such as when :ref:`env.skip_bad_hosts <skip-bad-hosts>` is True) the return value for that host will be the error object or message."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:36
# b8af006303f34bdf800ee60b4bf8e4fd
msgid ":ref:`The execute usage docs <execute>`, for an expanded explanation and some examples."
msgstr ""

#: ../../../fabric/tasks.py:docstring of fabric.tasks.execute:40
# 899d992d9280454fa1cb6439a10d3148
msgid "Added the return value mapping; previously this function had no defined return value."
msgstr ""

