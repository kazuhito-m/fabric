# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014, Christian Vest Hansen and Jeffrey E. Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-03 19:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../usage/output_controls.rst:3
# 32e06c691c9c4b7fa6578fa31f2feee2
msgid "Managing output"
msgstr ""

#: ../../usage/output_controls.rst:5
# d8afdc715d5f481aa5b8fe4e6dd5f39b
msgid "The ``fab`` tool is very verbose by default and prints out almost everything it can, including the remote end's stderr and stdout streams, the command strings being executed, and so forth. While this is necessary in many cases in order to know just what's going on, any nontrivial Fabric task will quickly become difficult to follow as it runs."
msgstr ""

#: ../../usage/output_controls.rst:13
# 40f8a880e615424eabe114ea5eaa7a26
msgid "Output levels"
msgstr ""

#: ../../usage/output_controls.rst:15
# 4df75b159ba6431fb24af73be7083324
msgid "To aid in organizing task output, Fabric output is grouped into a number of non-overlapping levels or groups, each of which may be turned on or off independently. This provides flexible control over what is displayed to the user."
msgstr ""

#: ../../usage/output_controls.rst:22
# 3badd1a4bd5a4cc7b01d60b95f7bddd2
msgid "All levels, save for ``debug``, are on by default."
msgstr ""

#: ../../usage/output_controls.rst:25
# 07fe576a996747cbaa55bc732eb2246d
msgid "Standard output levels"
msgstr ""

#: ../../usage/output_controls.rst:27
# bf7ec0aca49a493c857b697d035756a3
msgid "The standard, atomic output levels/groups are as follows:"
msgstr ""

#: ../../usage/output_controls.rst:29
# 89832f0a7680459cb0e15e1459fd1162
msgid "**status**: Status messages, i.e. noting when Fabric is done running, if the user used a keyboard interrupt, or when servers are disconnected from. These messages are almost always relevant and rarely verbose."
msgstr ""

#: ../../usage/output_controls.rst:33
# 1e87a35986b44d80bfac556d7b5e2180
msgid "**aborts**: Abort messages. Like status messages, these should really only be turned off when using Fabric as a library, and possibly not even then. Note that even if this output group is turned off, aborts will still occur -- there just won't be any output about why Fabric aborted!"
msgstr ""

#: ../../usage/output_controls.rst:38
# a595346d8e204e6e8e2b612afec7ed63
msgid "**warnings**: Warning messages. These are often turned off when one expects a given operation to fail, such as when using ``grep`` to test existence of text in a file. If paired with setting ``env.warn_only`` to True, this can result in fully silent warnings when remote programs fail. As with ``aborts``, this setting does not control actual warning behavior, only whether warning messages are printed or hidden."
msgstr ""

#: ../../usage/output_controls.rst:45
# b1d80e641ade4a298bc9a0cf61cbd338
msgid "**running**: Printouts of commands being executed or files transferred, e.g. ``[myserver] run: ls /var/www``. Also controls printing of tasks being run, e.g. ``[myserver] Executing task 'foo'``."
msgstr ""

#: ../../usage/output_controls.rst:49
# 5a1eda85ad35448caba469009a4c5332
msgid "**stdout**: Local, or remote, stdout, i.e. non-error output from commands."
msgstr ""

#: ../../usage/output_controls.rst:51
# 986a271e2e7c472f9fbc46aec2c26735
msgid "**stderr**: Local, or remote, stderr, i.e. error-related output from commands."
msgstr ""

#: ../../usage/output_controls.rst:53
# d7e753401315497f99cfb00586b6b241
msgid "**user**: User-generated output, i.e. local output printed by fabfile code via use of the `~fabric.utils.fastprint` or `~fabric.utils.puts` functions."
msgstr ""

#: ../../usage/output_controls.rst:56
# 10da57f31dea4960ad4b4ef047259926
msgid "Added \"Executing task\" lines to the ``running`` output level."
msgstr ""

#: ../../usage/output_controls.rst:59
# 2b64915079e345a1aceb14dafcf85cb1
msgid "Added the ``user`` output level."
msgstr ""

#: ../../usage/output_controls.rst:63
# 65ba9b5e32874a9c9acd8f3938449b11
msgid "Debug output"
msgstr ""

#: ../../usage/output_controls.rst:65
# 96162965bb054bf3817df5801a850b4f
msgid "There is a final atomic output level, ``debug``, which behaves slightly differently from the rest:"
msgstr ""

#: ../../usage/output_controls.rst:68
# 811ebc0c8f39467789a137484ba73826
msgid "**debug**: Turn on debugging (which is off by default.) Currently, this is largely used to view the \"full\" commands being run; take for example this `~fabric.operations.run` call::"
msgstr ""

#: ../../usage/output_controls.rst:74
# 14e002947b584942924e4566054f660c
msgid "Normally, the ``running`` line will show exactly what is passed into `~fabric.operations.run`, like so::"
msgstr ""

#: ../../usage/output_controls.rst:79
# 82eb23f5385e4e359a67321b25d029e8
msgid "With ``debug`` on, and assuming you've left :ref:`shell` set to ``True``, you will see the literal, full string as passed to the remote server::"
msgstr ""

#: ../../usage/output_controls.rst:84
# 6f17af90f14549069fb6634ff4a9abf9
msgid "Enabling ``debug`` output will also display full Python tracebacks during aborts."
msgstr ""

#: ../../usage/output_controls.rst:89
# a3e4d01a8f104674bcbf26c011977cc6
msgid "Where modifying other pieces of output (such as in the above example where it modifies the 'running' line to show the shell and any escape characters), this setting takes precedence over the others; so if ``running`` is False but ``debug`` is True, you will still be shown the 'running' line in its debugging form."
msgstr ""

#: ../../usage/output_controls.rst:95
# 1b4635e1d5c04342bbc476731c32ca4b
msgid "Debug output now includes full Python tracebacks during aborts."
msgstr ""

#: ../../usage/output_controls.rst:101
# 365c20d860e342c180e3fbc0bfc7efce
msgid "Output level aliases"
msgstr ""

#: ../../usage/output_controls.rst:103
# f38a45b8a74b46eaacd472f5cac42ae3
msgid "In addition to the atomic/standalone levels above, Fabric also provides a couple of convenience aliases which map to multiple other levels. These may be referenced anywhere the other levels are referenced, and will effectively toggle all of the levels they are mapped to."
msgstr ""

#: ../../usage/output_controls.rst:108
# aedd9dfe4cfd49558d4397ae8c003a03
msgid "**output**: Maps to both ``stdout`` and ``stderr``. Useful for when you only care to see the 'running' lines and your own print statements (and warnings)."
msgstr ""

#: ../../usage/output_controls.rst:111
# a7926494ac8e4b188b3114462a39f430
msgid "**everything**: Includes ``warnings``, ``running``, ``user`` and ``output`` (see above.) Thus, when turning off ``everything``, you will only see a bare minimum of output (just ``status`` and ``debug`` if it's on), along with your own print statements."
msgstr ""

#: ../../usage/output_controls.rst:116
# 049db4c7441a4cca9d387dcf7aa0f78d
msgid "**commands**: Includes ``stdout`` and ``running``. Good for hiding non-erroring commands entirely, while still displaying any stderr output."
msgstr ""

#: ../../usage/output_controls.rst:119
# 064c1d161e2f4268b8c93f18ef846aee
msgid "Added the ``commands`` output alias."
msgstr ""

#: ../../usage/output_controls.rst:124
# 1f37fe6454d541e9a38a6285c3224197
msgid "Hiding and/or showing output levels"
msgstr ""

#: ../../usage/output_controls.rst:126
# 7315491a7d7f4140ad2d71d8a185097f
msgid "You may toggle any of Fabric's output levels in a number of ways; for examples, please see the API docs linked in each bullet point:"
msgstr ""

#: ../../usage/output_controls.rst:129
# fbd1c1b841de45df8f683e03f8885b4d
msgid "**Direct modification of fabric.state.output**: `fabric.state.output` is a dictionary subclass (similar to :doc:`env <env>`) whose keys are the output level names, and whose values are either True (show that particular type of output) or False (hide it.)"
msgstr ""

#: ../../usage/output_controls.rst:134
# 3c9c446e5b064df981473f916c15f319
msgid "`fabric.state.output` is the lowest-level implementation of output levels and is what Fabric's internals reference when deciding whether or not to print their output."
msgstr ""

#: ../../usage/output_controls.rst:138
# c0d8cce8d1564204ab649a51a8c61d1d
msgid "**Context managers**: `~fabric.context_managers.hide` and `~fabric.context_managers.show` are twin context managers that take one or more output level names as strings, and either hide or show them within the wrapped block. As with Fabric's other context managers, the prior values are restored when the block exits."
msgstr ""

#: ../../usage/output_controls.rst:146
# 4a1abb2331d94bfea8f3b7712601d53a
msgid "`~fabric.context_managers.settings`, which can nest calls to `~fabric.context_managers.hide` and/or `~fabric.context_managers.show` inside itself."
msgstr ""

#: ../../usage/output_controls.rst:150
# 3ce7d2e0615d4d12a139884b419a20e3
msgid "**Command-line arguments**: You may use the :option:`--hide` and/or :option:`--show` arguments to :doc:`fab`, which behave exactly like the context managers of the same names (but are, naturally, globally applied) and take comma-separated strings as input."
msgstr ""

